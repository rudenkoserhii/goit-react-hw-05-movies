{"version":3,"file":"static/js/105.64785263.chunk.js","mappings":"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","sources":["components/API/API.js","components/App.styled.jsx","components/HomePage/HomePage.jsx","components/Loader/Loader.jsx","components/Movies/Movies.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    headers: { 'Content-Type': 'application/json' },\n    params: {\n      api_key: process.env.REACT_APP_MOVIE_API_KEY,\n    },\n  });\n\n\nexport const getTrending = async () => {\n    const response = await axiosInstance.get('trending/all/day');\n    return response.data;\n};\n\nexport const searchMovies = async value => {\n    const response = await axiosInstance.get(`search/movie?query=${value}`);\n    return response.data;\n};\n\nexport const getMovieDetails= async movieId => {\n    const response = await axiosInstance.get(`movie/${movieId}`);\n    return response.data;\n};\n\nexport const getMovieCredits= async movieId => {\n    const response = await axiosInstance.get(`movie/${movieId}/credits`);\n    return response.data;\n};\n\nexport const getMovieReviews= async movieId => {\n    const response = await axiosInstance.get(`movie/${movieId}/reviews`);\n    return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: ${p => p.theme.space[4]}px;\n`;\n\n\nexport const ErrorMessage = styled.div`\n    font-family: inherit;\n    font-size: 18px;\n    line-height: 24px;\n    font-style: normal;\n    font-weight: 500;\n\n    text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0.2em blue;\n\n\n\n    text-align: center;\n    margin: ${p => p.theme.space[4]}px;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from '../API/API';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { MoviesListStyled, Title, TitleMovie, ListItem, Img } from \"../Movies/Movies.styled\";\nimport { Loader } from '../Loader/Loader';\nimport { ErrorMessage } from '../App.styled';\nimport image from '../MovieDetails/else.jpg';\n\n\n\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState('false');\n    const [error, setError] = useState(null);\n\n    const location = useLocation();\n\n\n  useEffect( () => {\n\n    async function fetchMovies () {\n\n      setIsLoading('true');\n      try {\n      await getTrending()\n        .then(responce => {\n          if (responce.total_results === 0) {\n            return Promise.reject(new Error('No such Movie!'))\n          }\n            setMovies(responce.results);\n            setIsLoading('false');\n        })} catch(error) {\n          new Error();\n          setError(error);\n        }\n      };\n\n    fetchMovies ()\n  }, []);\n\n  if (!movies) {\n    return null;\n  }\n\n  \n\n    return (\n        <>\n        <Title>Trending list</Title>\n        <MoviesListStyled>\n            {movies.map(({ title, id, name, poster_path, tagline }) => \n            <ListItem key={id}>\n              <Link to={`movies/${id}`} relative=\"path\"  state={{ from: location }}>\n                <TitleMovie>{title??name}</TitleMovie>\n                <Img src={(!poster_path) ? image : `https://image.tmdb.org/t/p/w200${poster_path}`} alt={tagline} width=\"200\"/>\n              </Link>\n            </ListItem>)}\n        </MoviesListStyled>\n        {(isLoading === 'true') && <Loader/>}\n        {(error !== null) && <ErrorMessage>{error.message}</ErrorMessage>}\n        </>\n    )\n}\n\nexport default HomePage;","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n\nreturn (\n<ColorRing\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>\n)}\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n\nposition: relative;\n\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: ${p => p.theme.space[4]}px;\n\n\n`;\n\nexport const ListItem = styled.li`\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    border-radius: 8px;\n    :hover, :focus {transform: scale(1.01); transition: transform 150ms;}\n`;\n\nexport const Title = styled.h1`\n\n\n    padding: ${p => p.theme.space[4]}px;\n\n    font-style: normal;\n    font-weight: 700;\n\n    text-transform: uppercase;\n    text-align: center;\n    color: ${p => p.theme.colors.text};\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n\n`;\n\nexport const TitleMovie = styled.h2`\n\nposition: absolute;\n\n    margin: ${p => p.theme.space[1]}px;\nmax-width: 200px;\n\n\n\n    font-size: 12px;\n\n    font-style: normal;\n    font-weight: 700;\n\n    text-align: left;\n    color: ${p => p.theme.colors.white};\n    text-shadow: 2px 2px 2px ${p => p.theme.colors.black};\n\n\n`;\n\nexport const Img = styled.img`\n    border-radius: 8px;\n\n\n`;\n\n"],"names":["axiosInstance","axios","baseURL","headers","params","api_key","process","getTrending","get","response","data","searchMovies","value","getMovieDetails","movieId","getMovieCredits","getMovieReviews","ErrorMessage","styled","p","theme","space","useState","movies","setMovies","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","then","responce","total_results","Promise","reject","Error","results","fetchMovies","map","title","id","name","poster_path","tagline","to","relative","state","from","src","image","alt","width","message","Loader","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","MoviesListStyled","ListItem","Title","text","TitleMovie","white","black","Img"],"sourceRoot":""}