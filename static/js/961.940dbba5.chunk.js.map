{"version":3,"file":"static/js/961.940dbba5.chunk.js","mappings":"sSAEMA,E,MAAgBC,GAAAA,OAAa,CAC/BC,QAAS,gCACTC,QAAS,CAAE,eAAgB,oBAC3BC,OAAQ,CACNC,QAASC,sCAKFC,EAAW,mCAAG,oGACAP,EAAcQ,IAAI,oBADlB,cACjBC,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACDZ,EAAcQ,IAAd,6BAAwCI,IADvC,cAClBH,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZG,EAAe,mCAAE,WAAMC,GAAN,uFACHd,EAAcQ,IAAd,gBAA2BM,IADxB,cACpBL,EADoB,yBAEnBA,EAASC,MAFU,2CAAF,sDAKfK,EAAe,mCAAE,WAAMD,GAAN,uFACHd,EAAcQ,IAAd,gBAA2BM,EAA3B,aADG,cACpBL,EADoB,yBAEnBA,EAASC,MAFU,2CAAF,sDAKfM,EAAe,mCAAE,WAAMF,GAAN,uFACHd,EAAcQ,IAAd,gBAA2BM,EAA3B,aADG,cACpBL,EADoB,yBAEnBA,EAASC,MAFU,2CAAF,qD,gFCpBfO,GATOC,EAAAA,GAAAA,IAAH,mHAKN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIgBH,EAAAA,GAAAA,IAAH,uQAYX,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,4ECrBFC,EAAS,WAEtB,OACA,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAErD,C,6ICqEF,UAzEqB,WAAO,IAAD,IAEjBf,GAAYgB,EAAAA,EAAAA,MAAZhB,QACR,GAA0BiB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,SAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAoB7C,IAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,qFACER,EAAa,QADf,mBAGUtB,EAAAA,EAAAA,IAAgBC,GAAS8B,MAAK,SAAAC,GAClCZ,EAASY,GACTV,EAAa,QACtB,IANG,sDAQGE,EAAS,EAAD,IARX,yDAFc,uBAAC,WAAD,wBAaZS,EAEH,GAAE,CAAChC,KAGCkB,EACH,OAAO,KAGT,IAAQe,EAAoFf,EAApFe,MAAOC,EAA6EhB,EAA7EgB,KAAMC,EAAuEjB,EAAvEiB,aAAcC,EAAyDlB,EAAzDkB,OAAQC,EAAiDnB,EAAjDmB,SAAUC,EAAuCpB,EAAvCoB,aAAcC,EAAyBrB,EAAzBqB,YAAaC,EAAYtB,EAAZsB,QAEhF,OACE,gCACc,OAAVlB,IAAmB,SAAC,IAAD,UAAeA,EAAMmB,UAC1B,SAAdrB,IAAyB,SAAC,IAAD,KAC7B,UAAC,KAAD,YACA,SAAC,KAAD,CAAYsB,GAAIhB,EAAhB,sBACA,UAAC,KAAD,YACE,gBAAKiB,IAAOJ,EAAF,yCAA2DA,GAA1CK,EAAyDC,IAAKL,EAAS7B,MAAM,SACtG,UAAC,KAAD,YACE,UAAC,KAAD,kBAASsB,QAAT,IAASA,EAAAA,EAAOC,GACd,0BAASC,GAAD,YAAuB,IAAIW,KAAKX,GAAcY,cAA9C,WAEV,0BACE,uCADF,WACyBC,KAAKC,KAA0B,GAArBC,OAAOZ,IAD1C,SAGA,0BACE,qCADF,IACoBD,MAEpB,0BACE,mCADF,IACkBD,EAAOe,KAAI,SAAAC,GAAK,OAAIA,EAAMlB,IAAV,IAAgBmB,KAAK,gBAI7D,SAAC,KAAD,sCACA,2BACE,yBACE,SAAC,KAAD,CAAYX,GAAG,OAAOY,SAAS,QAAQ3B,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAArE,qBAEF,yBACE,SAAC,KAAD,CAAYc,GAAG,UAAUY,SAAS,QAAQ3B,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAxE,2BAGF,SAAC,EAAA2B,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,WAGP,C,wSC9EYC,EAAqBrD,EAAAA,GAAAA,IAAH,0BAIlBsD,EAAmBtD,EAAAA,GAAAA,GAAH,0IACd,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIL,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKCoD,GAAavD,EAAAA,EAAAA,IAAOwD,EAAAA,GAAPxD,CAAH,+IAGT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IASFsD,EAAOzD,EAAAA,GAAAA,IAAH,mHAGN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIHuD,EAAa1D,EAAAA,GAAAA,IAAH,0BAIV2D,EAAQ3D,EAAAA,GAAAA,GAAH,iLAcL4D,EAAc5D,EAAAA,GAAAA,EAAH,mMAGV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAWF0D,EAAW7D,EAAAA,GAAAA,GAAH,yHACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAST2D,EAAO9D,EAAAA,GAAAA,EAAH,yB","sources":["components/API/API.js","components/App.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    headers: { 'Content-Type': 'application/json' },\n    params: {\n      api_key: process.env.REACT_APP_MOVIE_API_KEY,\n    },\n  });\n\n\nexport const getTrending = async () => {\n    const response = await axiosInstance.get('trending/all/day');\n    return response.data;\n};\n\nexport const searchMovies = async value => {\n    const response = await axiosInstance.get(`search/movie?query=${value}`);\n    return response.data;\n};\n\nexport const getMovieDetails= async movieId => {\n    const response = await axiosInstance.get(`movie/${movieId}`);\n    return response.data;\n};\n\nexport const getMovieCredits= async movieId => {\n    const response = await axiosInstance.get(`movie/${movieId}/credits`);\n    return response.data;\n};\n\nexport const getMovieReviews= async movieId => {\n    const response = await axiosInstance.get(`movie/${movieId}/reviews`);\n    return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: ${p => p.theme.space[4]}px;\n`;\n\n\nexport const ErrorMessage = styled.div`\n    font-family: inherit;\n    font-size: 18px;\n    line-height: 24px;\n    font-style: normal;\n    font-weight: 500;\n\n    text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0.2em blue;\n\n\n\n    text-align: center;\n    margin: ${p => p.theme.space[4]}px;\n`;\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n\nreturn (\n<ColorRing\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>\n)}\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../components/API/API';\nimport { MovieDetailsStyled, LinkStyled, Wrap, WrapSecond, Title, TitleSecond } from \"./MovieDetails.styled\";\nimport { Outlet } from \"react-router-dom\";\nimport { Loader } from '../../components/Loader/Loader';\nimport { ErrorMessage } from '../../components/App.styled';\nimport image from './else.jpg';\n\n\nconst MovieDetails = () => {\n\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState('false');\n  const [error, setError] = useState(null);\n\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n\n  useEffect(() => {\n\n    async function fetchMovie () {\n      setIsLoading('true');\n      try {\n        await getMovieDetails(movieId).then(responce => {\n          setMovie(responce);\n          setIsLoading('false');\n});\n      } catch(err) {\n       setError(err);\n    }\n    }\n      fetchMovie ()\n\n  }, [movieId]);\n\n\n  if (!movie) {\n    return null;\n  }\n\n  const { title, name, release_date, genres, overview, vote_average, poster_path, tagline } = movie;\n\n  return (\n    <>\n      {(error !== null) && <ErrorMessage>{error.message}</ErrorMessage>}\n      {(isLoading === 'true') && <Loader/>}\n    <MovieDetailsStyled>\n    <LinkStyled to={backLinkHref}>Go back</LinkStyled>\n    <Wrap>\n      <img src={(!poster_path) ? image : `https://image.tmdb.org/t/p/w300${poster_path}`} alt={tagline} width=\"300\"/>\n        <WrapSecond>\n          <Title>{ title??name }\n            <span>{ (release_date) && ` (${new Date(release_date).getFullYear()})`}</span>\n          </Title>\n          <p>\n            <b>User score:</b>{` ${Math.ceil(Number(vote_average)*10)}%`}\n          </p>\n          <p>\n            <b>Overview:</b> {overview}\n          </p>\n          <p>\n            <b>Genres:</b> {genres.map(genre => genre.name).join(', ')}\n          </p>\n      </WrapSecond>\n    </Wrap>\n    <TitleSecond>Additional information</TitleSecond>\n    <ul>\n      <li>\n        <LinkStyled to=\"cast\" relative='route' state={{ from: location.state.from }}>Cast</LinkStyled>\n      </li>\n      <li>\n        <LinkStyled to=\"reviews\" relative='route' state={{ from: location.state.from }}>Reviews</LinkStyled>\n      </li>\n    </ul>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsStyled></>);\n};\n\nexport default MovieDetails;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsStyled = styled.div`\n\n`;\n\nexport const AdditionalStyled = styled.ul`\n    padding: ${p => p.theme.space[2]}px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: ${p => p.theme.space[4]}px;\n\n\n`;\n\nexport const LinkStyled = styled(Link)`\n    display: block;\n\n    margin: ${p => p.theme.space[2]}px;\n\n    font-size: 16px;\n\n    font-style: normal;\n    font-weight: 700;\n\n`;\n\nexport const Wrap = styled.div`\n    display: flex;\n    justify-content: start;\n    gap: ${p => p.theme.space[4]}px;\n\n    padding: ${p => p.theme.space[2]}px;\n\n`;\n\nexport const WrapSecond = styled.div`\n\n`;\n\nexport const Title = styled.h1`\n    display: block;\n\n\n    font-size: 24px;\n\n    font-style: normal;\n    font-weight: 700;\n\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n\n\n`;\n\nexport const TitleSecond = styled.p`\n    display: block;\n\n    margin: ${p => p.theme.space[2]}px;\n\n    font-size: 18px;\n\n    font-style: italic;\n    font-weight: 700;\n\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n\n`;\n\nexport const ListItem = styled.li`\n    margin-bottom: ${p => p.theme.space[4]}px;\n    width: 200px;\n\n    overflow: hidden;\n\n    font-size: 12px;\n\n`;\n\nexport const Text = styled.p`\n\n`;\n"],"names":["axiosInstance","axios","baseURL","headers","params","api_key","process","getTrending","get","response","data","searchMovies","value","getMovieDetails","movieId","getMovieCredits","getMovieReviews","ErrorMessage","styled","p","theme","space","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useParams","useState","movie","setMovie","isLoading","setIsLoading","error","setError","location","useLocation","backLinkHref","state","from","useEffect","then","responce","fetchMovie","title","name","release_date","genres","overview","vote_average","poster_path","tagline","message","to","src","image","alt","Date","getFullYear","Math","ceil","Number","map","genre","join","relative","Suspense","fallback","MovieDetailsStyled","AdditionalStyled","LinkStyled","Link","Wrap","WrapSecond","Title","TitleSecond","ListItem","Text"],"sourceRoot":""}